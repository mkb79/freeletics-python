[tool.poetry]
name = "freeletics"
version = "0.0.dev3"
description = "(A)Sync Interface for internal Freeletics API written in pure Python."
authors = ["mkb79 <mkb79@hackitall.de>"]
license = "AGPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/mkb79/freeletics-python"
repository = "https://github.com/mkb79/freeletics-python"
packages = [
    { include = "freeletics", from = "src" },
]
keywords = [
    "Freeletics",
    "API",
    "async"
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11"
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
httpx = ">=0.24.0"
PyJWT = ">=2.6.0"

[tool.poetry.group.dev.dependencies]
Sphinx = ">=6.1.3"
sphinx-autobuild = ">=2021.3.14"
sphinx-rtd-theme = ">=1.2.0"
recommonmark = ">=0.7.1"
pygments = ">=2.15.0"
black = ">=23.3.0"
coverage = {extras = ["toml"], version = ">=7.2.3"}
darglint = ">=1.8.1"
mypy = ">=1.2.0"
pre-commit = ">=3.2.2"
pre-commit-hooks = ">=4.4.0"
pytest = ">=7.3.1"
pytest-mock = ">=3.10.0"
ruff = ">=0.0.261"
safety = ">=2.3.5"
typeguard = ">=3.0.2"
xdoctest = {extras = ["colors"], version = ">=1.1.1"}

[tool.poetry_bumpversion.file."src/freeletics/_version.py"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["freeletics", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 35  # temporarily reduce target until tests are implemented
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.mypy]
disable_error_code = [
    "arg-type",
    "assignment",
    "attr-defined",
    "index",
    "no-any-return",
    "no-untyped-call",
    "no-untyped-def",
    "return-value",
    "type-arg",
    "union-attr",
]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = true
warn_unreachable = true

[tool.ruff]
#  missing rst-docstrings check, these should be adding through ruff
ignore = [
    "D10",  # temporarily ignore missing docstrings
]
line-length = 88
select=[
    "A",
    "B",
    "C4",
    "C9",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "PGH",
    "PLC",
    "PLE",
    "S",
    "UP",
    "W",
]
src = ["src"]
target-version = "py38"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.isort]
force-single-line = false
known-first-party = ["freeletics"]
lines-after-imports = 2

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
